#   Luan Carlos Maia Cruz - GRR20203891
#   Leonardo Marin Mendes Martin - GRR20205675

COMO UTILIZAR (MAKE):
    1. Rodando apenas make, irá gerar os executáveis sem a inclusão dos marcadores do likwid.
       Se desejar utilizar com os marcadores, utilize a regra markers

    2. Para facilitar a execução dos scripts existem regras do make exclusivas, que já fazem a cópia do script
       mais informações no tópico "SCRIPTS":
        compara
        comparaTodas
        gerarGraficos
        gerarPontos
        diff


    3. Para limpar as pastas (sem remover os executaveis) e remover os scripts, utilize a regra clean

    4. Para limpar tudo e deixar apenas os arquivos fonte, utilize a regra purge

    5. Para mostrar as matrizes geradas e também os resultados, utilize a regra debug

    6. Para mostrar somente os resultados, utilize a regra results

    7. A regra compact criar um arquivo tar.gz

SCRIPTS:

    1. perfectr_pontos.sh
        Uso: ./perfctr_pontos <executavel> <diretorio de saida>
        - Executa o programa para cada metrica indicada, salvando em arquivos, com nomes já predefinidos, o resultado obtido para cada ponto informado
        deve ser informado também um diretório para salvar os arquivos gerados
        - Os arquivos com os dados para cada métrica estão separados de acordo com o nome da função, os que possuem nome multMatVet são referentes
        a multiplicação de matriz por vetor. Os que possuem nome multMatMat são referentes a multiplicação de matriz por matriz. 
        - Os arquivos que possuem OTZ no meio do nome são referentes ao programa otimizado, os que não possuem são referentes ao programa não otimizado. 

    2. geraGraficos.sh
        Uso: ./geraGraficos.sh  <diretorio_de_entrada_pontos_nao_otimizado > <diretorio_de_entrada_pontos_otimizados> <diretorio_salvar_gráficos>
        - Este script gera os gráficos de comparação de métricas, deve ser informado onde estão os dados das metricas do programa não otimizado
        ,do programa otimizado e também um diretório onde serão salvos os gráficos gerados.
    
    3. plotarGrafico.gp
        Uso: gnuplot -c plotarGrafico.gp <arquivo1> <arquivo2> <titulo do grafico> <nome_do_arquivo> <unidade eixo y> <metrica>
        - Este script gera o gráfico de comparação entre dois arquivos, o argumento <metrica> é apenas para decidir qual será o tipo de gráfico
        - E necessário ter o gnuplot instalado

    4. compara.sh
        Uso: ./compara <métrica> <ponto> 
        - Este script mostra os resultados da métrica informada, para o programa não otimizado e o otimizado, do um ponto escolhido 

    5. comparaTodas.sh
        Uso: ./comparaTodas <ponto>
        - Este script mostra os resultados das métricas informadas, para o programa não otimizado e o otimizado, do um ponto escolhido 
    
    6. testarDiff.sh
        Uso: ./testarDiff.sh
        - Este script executa o programa não otimizado e o otimizado, para cada ponto informado, e compara os resultados obtidos, mostrando a diferença
        Foi utilizado apenas para verificar se os resultados obtidos eram iguais, para que os testes fossem feitos com os mesmos pontos e não houvesse  
        diferença nos resultados obtidos.

DIRETÓRIOS:
    Otimizado: Diretório com os arquivos fonte que possuem as otimização de código 
    SemOtimizacao: Diretório com os arquivos fonte originais
    Scripts: Diretório com os Scripts auxiliares
    Dados_Graficos: Diretório com os arquivos que possuem os dados de cada métrica e os gráficos de comparação gerados
    Makefile: Arquivo com diversas regras para facilitar a utilização do projeto (Ver tópico: COMO UTILIZAR)
    topologiaH13.txt: Arquivo com a topoligia da máquina H13 do lab 12 do DINF
    LEIAME: Documento para orientar como executar o projeto 

OBSERVAÇÕES:

    1. Utilizamos o BK igual a 8 devido ao tamanho da cache line, que é 64 bytes, e o tamanho de um double é 8 bytes, então para que o vetor caiba
       na cache line, o tamanho do bloco deve ser 8.

    2.

    3. O Script que geraPontos demorou cerca de 16 minutos para gerar todos os pontos do programa não otimizado

    4. O Script que geraPontos demorou cerca de 4 minutos para gerar todos os pontos do programa otimizado

    5. A maior dificuldade foi tentar melhorar mais as métricas de L2CACHE e L3 que são relacionadas a memória 